# https://www.pantsbuild.org/docs/reference-global
[GLOBAL]
pants_version = "2.14.0"
backend_packages = [
    "pants.backend.shell",
    "pants.backend.python",
    "pants.backend.python.lint.black",
    "pants.backend.python.lint.flake8",
    "pants.backend.python.lint.isort",
    "pants.backend.experimental.python.lint.autoflake",
    "pants.backend.experimental.python.lint.pyupgrade",
    "pants.backend.experimental.python",
]
build_file_prelude_globs = ["pants-plugins/macros.py"]

# https://www.pantsbuild.org/docs/reference-anonymous-telemetry
[anonymous-telemetry]
enabled = true
repo_id = "41f24f83-613f-46cc-9808-6d4c01fbd25b"

# https://www.pantsbuild.org/docs/reference-source
[source]
root_patterns = ['/src/python/*', '/']

# https://www.pantsbuild.org/docs/reference-python
[python]
interpreter_constraints = [">=3.7"]
tailor_ignore_empty_init_files = false
enable_resolves = true

# https://www.pantsbuild.org/docs/reference-python#resolves
[python.resolves]
python-default = "lockfiles/default.lock"

# https://www.pantsbuild.org/docs/reference-python-infer
[python-infer]
init_files = "always"

# https://www.pantsbuild.org/docs/reference-subprocess-environment
[subprocess-environment]
env_vars.add = ["TWINE_PASSWORD", "TWINE_USERNAME"]

# https://www.pantsbuild.org/docs/reference-black
[black]
export = false
lockfile = "lockfiles/black.lock"
extra_requirements.add = ["tomli"]

# https://www.pantsbuild.org/docs/reference-flake8
[flake8]
export = false
extra_requirements.add = ["importlib-metadata==4.13.0"]
lockfile = "lockfiles/flake8.lock"

# https://www.pantsbuild.org/docs/reference-pytest
[pytest]
export = false
extra_requirements.add = ["anyio"]
lockfile = "lockfiles/pytest.lock"

# https://www.pantsbuild.org/docs/reference-isort
[isort]
lockfile = "lockfiles/isort.lock"

# https://www.pantsbuild.org/docs/reference-test
[test]
use_coverage = true

# https://www.pantsbuild.org/docs/reference-coverage-py
[coverage-py]
fail_under = 100
config = "pyproject.toml"

# https://www.pantsbuild.org/docs/reference-twine
[twine]
args = ["--skip-existing"]
